% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nw.filterspatial.R
\name{nw.filterspatial}
\alias{nw.filterspatial}
\title{Filter Nest Locations by Expected Range Maps}
\usage{
nw.filterspatial(
  points,
  polygon,
  mode,
  buffer = NULL,
  buffer_units = NULL,
  buffer_output = NULL,
  proj = NULL,
  output = NULL
)
}
\arguments{
\item{points}{sf; A spatial feature containing point data.}

\item{polygon}{sf; A spatial polygon representing the area for which you want to include datafrom.}

\item{mode}{\code{"flag"} or \code{"remove"}; A character string defining if the user wants the identified nesting attempts to be flagged with "FLAGGED" in a new column. Or removed from the dataset.}

\item{buffer}{numeric; Optional distance to buffer around the polygon}

\item{buffer_units}{\code{"km"} or \code{"mi"}; A character string defining the buffer distance units as either kilometers or miles.}

\item{buffer_output}{logical; Optionally export the generated buffered polygon to the global enviornment.}

\item{proj}{a PROJ.4 sting; Optional definition for map projection. Defaults to Lambert Conformal Conic.}

\item{output}{character; An optional character string to custom name the output spatial dataframe.}
}
\value{
sf; A spatial dataframe
}
\description{
Use a geospatial polygon to identify or remove points located outside the polygon. This function also includes an
option buffer argument which can be used to add a specific distance buffer around the polygon prior to filtering.
}
\examples{
test <- 1 + 2
\dontrun{
set.seed(123)
Generate random points and polygon
points <- st_sfc(st_multipoint(matrix(runif(20, -10, 10), ncol = 2, byrow = TRUE)))
polygon <- st_polygon(list(rbind(c(-5,-5), c(5,-5), c(5,5), c(-5,5), c(-5,-5))))

nw.filterspatial(points, polygon, mode = "remove")


}
}
